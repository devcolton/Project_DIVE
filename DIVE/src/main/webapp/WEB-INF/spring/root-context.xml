<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- [DB 관련 설정 : DB 관련 정보를 커넥션 풀 객체에 담는 설정] -->
	<!-- 1. HikariConfig 빈 등록 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- 변수 설정 : property 태그 사용, name="변수 이름" value="저장 값" -->
		<!-- 보안을 위해 직접 작성하지 않고 properties value를 el태그로 불러오는 방식을 사용 가능 -->
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
			/> <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl" 
			/> -->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="username" value="scott" />
		<property name="password" value="scott" />
	</bean>

	<!-- 2. DataSource 등록 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<!-- 생성자를 통한 의존성 주입 -->
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven />
	
	<mybatis-spring:scan
		base-package="kr.jungang.dive.user.persistence" />
	<mybatis-spring:scan
		base-package="kr.jungang.dive.board.persistence" />
	<mybatis-spring:scan
		base-package="kr.jungang.dive.product.persistence" />

	<!-- [컴포넌트 자동 스캔 명령] -->
	<!-- 자동주입 명령을 사용하기 위해 위치를 알려줘야한다. -->
	<context:component-scan
		base-package="kr.jungang.dive" />
	<context:component-scan
		base-package="kr.jungang.dive.user.service" />
	<context:component-scan
		base-package="kr.jungang.dive.board.service" />
	<context:component-scan
		base-package="kr.jungang.dive.product.service" />

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.jungang.dive.board.persistence.PostMapper">
	<resultMap id="replyResultMap" type="kr.jungang.dive.board.domain.ReplyVO"  >
			<id property="id" column="id" />
			<result property="pid" column="pid" />
			<result property="rid" column="rid" />
			<result property="content" column="content" />
			<result property="writer" column="writer" />
			<result property="userNum" column="user_num" />
			<result property="regDate" column="reg_date" />
			<result property="updateDate" column="update_date" />
			<association property="user" resultMap="kr.jungang.dive.user.persistence.UserMapper.userResultMap" columnPrefix="user_"/>
			<collection property="replyList" resultMap="replyResultMap"/>
	</resultMap>

	<resultMap id="postResultMap" type="kr.jungang.dive.board.domain.PostVO" extends="replyResultMap">
			<result property="title" column="title" />
	</resultMap>
	
	<select id="getAllPost" resultMap="postResultMap">
	<![CDATA[
		select *
		  from tbl_post
	]]>
	</select>
	
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%' || #{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%' || #{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%' || #{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="getTotCount" resultType="int">
	<![CDATA[
		select count(*) from tbl_post 
		 where
	]]>
	
	<include refid="criteria"></include>
	 
	<![CDATA[
		id > 0
	]]>
	
	</select>
	
	
	<select id="findById" resultMap="postResultMap">
	<![CDATA[
		select *
		  from tbl_post
		 where id = #{id}
	]]>
	</select>
	
	<select id="getPostWithPaging" resultMap="postResultMap">
	<![CDATA[
		select p.id, p.title, p.content, p.writer, p.user_num, p.reg_date, p.update_date,
			   m.id as user_id,
			   m.USER_ID as user_USER_ID,
			   m.name as user_name,
			   m.nickname as user_nickname,
			   m.password as user_password,
			   m.address as user_address,
			   m.email as user_email,
			   m.phone as user_phone,
			   m.SEX as user_SEX,
			   m.BIRTHDAY as user_BIRTHDAY,
			   m.reg_date as user_reg_date,
			   m.update_date as user_update_date,
			   m.enabled as user_enabled
		  from
		  (select rownum rn, id, title, content, writer, user_num, reg_date, update_date
		     from (select * from tbl_post order by id desc)
		    where 
	]]>
	
		<include refid="criteria"></include>
	
	<![CDATA[
		rownum <= #{pageNum} * #{amount}) p left outer join tbl_user m on p.user_num = m.id
		where rn > (#{pageNum} -1) * #{amount}
		  
	]]>
	</select>
	
	<insert id="insertPost">
		<selectKey keyProperty="id" order="BEFORE" resultType="long">
		<![CDATA[
		 select seq_post.nextval from dual
		]]>
		</selectKey>
		insert into tbl_post (id, title, content, writer, user_num)
		values(#{id}, #{title}, #{content}, #{writer}, #{userNum})
	</insert>
	
	<update id="updatePost">
		update tbl_post
		set title = #{title},
		content = #{content},
		update_date = sysdate
		where id = #{id}
	</update>

	<delete id="deletePost">
   <![CDATA[
   		delete from tbl_post where id= #{id}
   	]]>
	</delete>
</mapper>
